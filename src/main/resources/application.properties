# How to connect to Multiple databases with Spring Data JPA
# https://www.opencodez.com/java/connecting-multiple-databases-spring-data-jpa.htm

# Using Multiple Data Sources Using Spring Boot 2 and Spring Data
# https://medium.com/@gokuldas.puthenpurakkal/using-multiple-data-sources-using-spring-boot-2-and-spring-data-d94769383646

spring.application.name=SpringbootMultipleDatasources

# ========================================
# =========== MySQL DB - "db1" ===========
# ========================================
db1.datasource.url=jdbc:mysql://localhost/multdb?serverTimezone=UTC
db1.datasource.username= #SEU USUARIO MySQL#
db1.datasource.password= #SUA SENHA MySQL#

# =================================================================================================================
# Always set the hibernate.dialect property to the correct org.hibernate.dialect.Dialect subclass for your database
# =================================================================================================================
db1.datasource.dialect=org.hibernate.dialect.MySQL5InnoDBDialect 

# =================================
# ========= H2 DB - "db2" =========
# =================================
db2.datasource.driver-class-name=org.h2.Driver
db2.datasource.url=jdbc:h2:file:~/MultDB/MovimentacoesComerciais
db2.datasource.username=sa
db2.datasource.password=

# =================================================================================================================
# Always set the hibernate.dialect property to the correct org.hibernate.dialect.Dialect subclass for your database
# =================================================================================================================
db2.datasource.dialect = org.hibernate.dialect.H2Dialect

# ========================================================
# Estas duas propriedades servem para ativar o console web
# e para específicar um path para acessar respectivamente.
# ========================================================
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# ===========================
# features for DDL generation
# ===========================
spring.jpa.generate-ddl= true

#===================================================
# Show Hibernate/JPA SQL Statements from Spring Boot
#===================================================
#spring.jpa.show-sql = true

#===================================================================================
# If Setted true, this property will register an OpenEntityManagerInViewInterceptor,
# which registers an EntityManager to the current thread, so you will have the same
# EntityManager until the web request is finished. It has nothing to do with a
# Hibernate SessionFactory etc.
# Unfortunately, OSIV (Open Session in View) is enabled by default in Spring Boot,
# and OSIV is really a bad idea from a performance and scalability perspective. So,
# make sure that in the application.properties configuration file, you have the
# following entry: spring.jpa.open-in-view=false
#===================================================================================
spring.jpa.open-in-view=false